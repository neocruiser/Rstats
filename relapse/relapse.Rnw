\documentclass[9pt,english]{extarticle}
\include{canevas_config}

\begin{document}
\author{Sleiman Bassim, PhD}
\title{R implementation}
\maketitle
\begin{linenumbers}
<<setup, include=FALSE, cache=FALSE>>=
# set global chunk options
opts_chunk$set(dev="postscript",
               fig.path="graphics/",
               fig.lp= "",
               comment=NA,
               fig.keep="high",
               fig.show='hold',
               fig.align='center', 
               out.width='.49\\textwidth',
               tidy.source=TRUE,
               crop=TRUE,
               results="markup",
               warnings=FALSE,
               error=FALSE,
               message=FALSE)
options(formatR.arrow=TRUE,
        width=70,
        digits = 3,
        scipen = 6)
@ 

\noindent
\marginnote{\small\color{blue}$\Lsh$ Project started Dec 10 2017}[.1cm]


\maketitle
\tableofcontents
\pagebreak



Loaded functions:
<<loading,results='hide'>>=
#source("/media/Data/Dropbox/humanR/01funcs.R")
rm(list=ls())
#setwd("/media/Data/Dropbox/humanR/PD/")
#setwd("~/Dropbox/humanR/PD/")
###load("PD.Rdata", .GlobalEnv)
#lsos(pat="")
@ 

Load packages.
<<packages,results='hide'>>=
pkgs <- c('gdata','caret','leaps','glmnet','lattice','latticeExtra',
          'ggplot2', 'dplyr', 'tidyr', 'RColorBrewer','igraph',
          'DescTools')
lapply(pkgs, require, character.only = TRUE)
@


\section{Data structure}
\label{sec:structure}
Data is from patients with Lymphoma tumors, either undergone or not a Rituximab CHOP treatment. Some patients show relapse after treatment. Tumors migrate though nodal (lymphnodes) or extranodal tissues. Tumors involve two different subtypes of cells of origin, ABC or GCB. \textbf{The first aim is to find correlation genes that respond differently to treatment, nodal transmission, and cell subtypes.}
<<summary_full>>=
metadata <- read.table("data/phenodata", sep = "\t", header = T)
head(metadata)

@ 

In the first steps of the analysis, the samples will be classified (supervised) into the following categories.
<<summary_selected>>=
metadata <- read.table("data/phenodata", sep = "\t", header = T) %>%
    dplyr::select(SAMPLE_ID, Timepoint, GROUP, SITE, Score, Prediction, ABClikelihood) %>%
    filter(Timepoint != "T2") %>%
    mutate(Groups = case_when(GROUP %in% c("CNS_RELAPSE_RCHOP",
                                            "CNS_RELAPSE_CHOPorEQUIVALENT",
                                            "CNS_DIAGNOSIS") ~ "CNS",
                               GROUP %in% c("TESTICULAR_NO_CNS_RELAPSE", "NO_RELAPSE") ~ "NOREL",
                               GROUP == "SYTEMIC_RELAPSE_NO_CNS" ~ "SYST",
                               TRUE ~ "CTRL")) %>%
    mutate(ABClassify = case_when(ABClikelihood >= .9 ~ "ABC",
                                  ABClikelihood <= .1 ~ "GCB",
                                  TRUE ~ "U")) %>%
    mutate(ABCScore = case_when(Score > 2412 ~ "ABC",
                                Score <= 1900 ~ "GCB",
#                                Score == NA ~ "NA",
                                TRUE ~ "U")) %>%
    mutate(Nodes = case_when(SITE == "LN" ~ "LN",
                             SITE == "TO" ~ "LN",
                             SITE == "SP" ~ "LN",
                             TRUE ~ "EN")) %>%
    mutate(Lymphnodes = case_when(Nodes == "LN" ~ 1, TRUE ~ 0))

# make sure all samples preserve their ID
metadata$Groups <- as.factor(metadata$Groups)
metadata$ABClassify <- as.factor(metadata$ABClassify)
metadata$ABCScore <- as.factor(metadata$ABCScore)
metadata$Nodes <- as.factor(metadata$Nodes)
metadata$Lymphnodes <- as.factor(metadata$Lymphnodes)

summary(metadata)
@ 

Difference in cases being indexed based on their \textit{cell-of-origin} association subtypes using either of the following features: prediction, ABClassify, ABCScore.
<<cells_difference>>=
metadata %>%
    select(Prediction, ABClassify, ABCScore) %>%
    summary

@ 


Distribution of samples with different treatments.
<<treatmens_bar>>=
metadata %>% 
    select(GROUP) %>%
    ggplot(aes(x = GROUP)) +
    geom_histogram(stat = "count") +
    labs(y = "Number of lymphoma cases",
         x = "Patients diagnosis") +
    theme_bw() +
    theme(axis.text.x = element_text(vjust = .5,
                                     angle = 45,
                                     size = 8))

@

Or as a pie chart.
<<treatments_pie>>=
palette.pies <- brewer.pal(12, name = "Set3")
palette.pies.adj <- colorRampPalette(palette.pies)(length(unique(metadata$GROUP)))
pie(table(metadata$GROUP), col=palette.pies.adj)
@ 

Distribution of samples with different cells of origin subtypes.
<<subtypes_bar>>=
metadata %>% 
    select(Prediction) %>%
    ggplot(aes(x = Prediction)) +
    geom_histogram(stat = "count") +
    labs(y = "Number of Cell-of-origin subtypes",
         x = "Patients Cell-of-origin classification") +
    theme_bw() +
    theme(axis.text.x = element_text(vjust = .5,
                                     angle = 45,
                                     size = 8))

@

Or as pie chart.
<<subtypes_pie>>=
palette.pies <- brewer.pal(12, name = "Set3")
palette.pies.adj <- colorRampPalette(palette.pies)(length(unique(metadata$Prediction)))
pie(table(metadata$Prediction), col=palette.pies.adj)
@ 

Distribution of samples with different lymphnodes and extranodal cancer metastasis.
<<nodes_bar>>=
par(mfrow=c(2,2))
metadata %>% 
    select(SITE) %>%
    ggplot(aes(x = SITE)) +
    geom_histogram(stat = "count") +
    labs(y = "Number of Nodata origins",
         x = "Patients lymphnodes and extranodal tumor presence") +
    theme_bw() +
    theme(axis.text.x = element_text(vjust = .5,
                                     angle = 45,
                                     size = 8))

@

Or as a pie chart.
<<nodes_pie>>=
palette.pies <- brewer.pal(12, name = "Set3")
palette.pies.adj <- colorRampPalette(palette.pies)(length(unique(metadata$SITE)))
pie(table(metadata$SITE), col=palette.pies.adj)
@ 

\section{Differential expression}
\label{sec:expression}
Genes have been fitted in a model that is based on an Empirical Bayes approach. Ranking of the genes determine if they are statistically significant. Bonferroni correction is used to control the false discovery rate (FDR). Moderated t-statistics, FDR, and fold change (log2) are implemented to reduce selection of false positives.

\begin{itemize}
\item \textbf{adjpval} is the adjusted P-value to control the FDR using Bonferroni correction. \textbf{Genes selected here based on their adjpval are also greater than or equal to the bstat threshold}.
\item \textbf{avgex} is the average expression the ordinary arithmetic average of the log2-expression values for the probe, across all arrays. \textbf{Genes selected here based on their avgex are also greater than or equal to the bstat threshold}.
\item \textbf{bstat} is the moderated t-statistics using an Empirical Bayes approach generating B-statistics scores. 
\end{itemize}

<<summary_expression>>=
expression <- read.table("data/summary.full.90800.txt", sep = "\t", header = T) %>%
    select(Design, Model, Bthreshold, adjPval, Category, Parameter, Transcripts) %>%
    filter(Category == "total")
summary(expression)
@ 

Number of transcripts when comparing B-statistics scores, which represent confidence in selecting each significantly expressed gene.
<<transcripts_bval>>=
aggregate( Transcripts ~ Bthreshold, data=expression, FUN=range)

@ 

Number of transcripts when samples are classed into groups, which are based on clinical data (e.g., cell-of-origin, CNS relapse, and nodal/extranodal tumor transmission).
<<transcripts_model>>=
aggregate( Transcripts ~ Model, data=expression, FUN=range)

@ 

Number of transcripts found when comparing different sample cases indexed based on their clinical data.
<<transcripts_design>>=
aggregate( Transcripts ~ Design, data=expression, FUN=range)
@ 


Number of genes that respond to treatment, cell subtypes, and nodal transmission.
<<expression_bval,out.width='5in'>>=

expression %>%
    ggplot(aes(
        x = Design,
        y = Transcripts,
        fill = factor(Bthreshold))) +
    theme_bw() +
    geom_bar(stat = "identity",
             position = "dodge") +
    coord_flip() +
    facet_wrap( ~ Model,
              ncol = 2,
               scales = "free") + 
    scale_fill_brewer(type = "qual", palette = 6) +
    labs(x = "Samples being compared",
         y = "Number of genes") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 


\section{Networks}
\label{sec:networks}
The number of clusters and modules per networks are assigned by designing first a similarity matrix between differentially expressed gene for any two conditions (eg., relapse vs no relapse patient cases).
An adjacency matrix is then constructed by weighting the previously inferred measures.
The data is transformed to increase the correlation coefficient therefore improving detection of strong correlated patterns. (Example of the strength of data transformation and correlation, visit the following \href{https://blog.majestic.com/case-studies/correlation-data-transformations/}{online page}).

\begin{itemize}
\item \textbf{MaxEdgesPerGene}, maximum number of correlations per genes
\item \textbf{NbNodes}, number of genes found for each edge connection bracket
\item \textbf{Normalization}, method that focuses on creating complete clusters. We tested methods ranging from Complete clustering, Average, and Ward. \href{https://stat.ethz.ch/R-manual/R-devel/library/stats/html/hclust.html}{Each method is detailed here.} Only Complete clustering was retained. All other methods overfitted the data.
  \marginnote{\small\color{blue}$\Lsh$Overfitting is a source of bias.}[0cm]
\item \textbf{Correlation}, finding ranges from linear to non-linear trends. We tested Pearson and Spearman correlation.
  \marginnote{\small\color{blue}$\Lsh$Effect of correlation methods is seen on module content}[0cm]
\item \textbf{Standardization}, data transformation method. We tested transformation by Hellinger, Standardize, Range, and Logarithmic scaling. \href{http://cc.oulu.fi/~jarioksa/softhelp/vegan/html/decostand.html}{Each method is detailed here.}
\item \textbf{MaxGenePerModule}, how many genes assigned by cluster (module)
\item \textbf{SimilaritySize}, number of initial differentially expressed genes
\item \textbf{EdgeThreshold}, parameter to limit the weight of the edges
\item \textbf{CorrelationPower}, power transformation of the data
\end{itemize}
<<networks_summary>>=
ns <- read.table("./data/networks.summary.104795.txt", header = T)
summary(ns)
@ 

\marginnote{\small\color{blue}$\Lsh$Test graphs}[0cm]
Difference between methods used for network inference. Are we able to generate convergence of the output of all iterations across all methods?
<<nodes_networks_summary_steps,out.width='5in'>>=

ns %>%
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 

Showing the number of modules per network and the number of genes per module. Each module contains differing number of nodes based on their correlation strength. Each cluster contains at least one module. Each network contains at least one cluster. One module can be assigned to nodes that belong to more than one cluster. The Lowess curves show if the trend in the data is linear or not. The wave around Lowess curves represents the level of confidence of the data points (the narrower the interval the better, less variability = more accuracy).
\marginnote{\small\color{blue}$\Lsh$Points=iterations. With less iterations comes high variability of the curve}[0cm]
<<nodes_modules_summary>>=

read.table("./data/modules.summary.104795.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)


@ 

\subsection{Network analysis for Spearman-related correlations}
\label{subsec:spearman}
Thresholds based on the Empirical Bayes approach to rank genes and determine if a gene is significantly expressed. Limma implementation.
\begin{itemize}
\item \textbf{Average Expression}: 5
\item \textbf{Adjusted P-value}: equal or less than 0.045
\item \textbf{Log Fold Change}: 1
\item \textbf{B-statisitcs}: 1.5
\end{itemize}


\subsubsection{Nodal versus extra-nodal lymphoma}
\label{subsec:nodal}

Genetic networks from differentially expressed genes selected by comparing sample cases with nodal and extranodal lymphoma.
<<nodes_networks_summary_spearman,out.width='5in'>>=

read.table("./data/networks.summary.104859.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 

Showing the number of modules per network and the number of genes per module. 
<<nodes_modules_summary_spearman>>=

read.table("./data/modules.summary.104859.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 



\subsubsection{Relapsed versus no CNS relapsed cases}
\label{subsec:relapsespearman}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<relapse_networks_summary_spearman,out.width='5in'>>=

read.table("./data/networks.summary.114018.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 


Showing the number of modules per network and the number of genes per module. 
<<relapse_modules_summary_spearman>>=

read.table("./data/modules.summary.114018.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 


\subsubsection{Lymphoma cases classified by Cell-of-origin subtypes}
\label{subsec:coospearmanstringent}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<coo_prediction_networks_summary_spearman,out.width='5in'>>=

read.table("./data/networks.summary.114017.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 


Showing the number of modules per network and the number of genes per module. 
<<coo_prediction_modules_summary_spearman>>=

read.table("./data/modules.summary.114017.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 



\subsection{Network analysis for Pearson-related correlations}
\label{subsec:pearson}
\marginnote{\small\color{blue}$\Lsh$With pearson, we can only raise the data to power 10. All are discarded after 10.}[0cm]
Thresholds based on the Empirical Bayes approach to rank genes and determine if a gene is significantly expressed. Limma implementation.
\begin{itemize}
\item \textbf{Average Expression}: 5
\item \textbf{Adjusted P-value}: equal or less than 0.045
\item \textbf{Log Fold Change}: 1
\item \textbf{B-statisitcs}: 1.5
\end{itemize}


\subsubsection{Nodal versus extra-nodal lymphoma}
\label{subsec:nodal}

Genetic networks from differentially expressed genes selected by comparing sample cases with nodal and extranodal lymphoma.
<<nodes_networks_summary_pearson,out.width='5in'>>=

read.table("./data/networks.summary.104862.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 

\marginnote{\small\color{blue}$\Lsh$Since Lowess ranks by confidence, Log transformation seems the best, ie, low variability. For this, Log is removed from further tests.}[0cm]
Showing the number of modules per network and the number of genes per module. 
<<nodes_modules_summary_pearson>>=

read.table("./data/modules.summary.104862.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 

\subsubsection{Relapsed versus no CNS relapsed cases}
\label{subsec:relapse}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<relapse_networks_summary_pearson,out.width='5in'>>=

read.table("./data/networks.summary.104863.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 


Showing the number of modules per network and the number of genes per module. 
<<relapse_modules_summary_pearson>>=

read.table("./data/modules.summary.104863.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 

\subsubsection{Lymphoma cases classified by Cell-of-origin subtypes}
\label{subsec:coo}
Genetic networks from differentially expressed genes selected by comparing sample cases with cell of origin classification based on ABC or GCB subtypes.
<<coo_prediction_networks_summary_pearson,out.width='5in'>>=

read.table("./data/networks.summary.104864.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 



Showing the number of modules per network and the number of genes per module. 
<<coo_prediction_modules_summary_pearson>>=

read.table("./data/modules.summary.104864.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 





\subsection{Network analysis for Spearman-related correlations}
\label{subsec:spearman}
Thresholds based on the Empirical Bayes approach to rank genes and determine if a gene is significantly expressed. Limma implementation.
\marginnote{\small\color{blue}$\Lsh$Same analysis with more stringent parameters}[0cm]
\begin{itemize}
\item \textbf{Average Expression}: 10
\item \textbf{Adjusted P-value}: equal or less than 0.030
\item \textbf{Log Fold Change}: 1
\item \textbf{B-statisitcs}: 2
\end{itemize}


\subsubsection{Nodal versus extra-nodal lymphoma}
\label{subsec:nodal}
Genetic networks from differentially expressed genes selected by comparing sample cases with nodal and extranodal lymphoma.
<<nodes_networks_summary_spearman_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119759.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 

Showing the number of modules per network and the number of genes per module. 
<<nodes_modules_summary_spearman_stringent>>=

read.table("./data/modules.summary.119759.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 



\subsubsection{Relapsed versus no CNS relapsed cases}
\label{subsec:relapsespearman}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<relapse_networks_summary_spearman_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119760.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 


Showing the number of modules per network and the number of genes per module. 
<<relapse_modules_summary_spearman_stringent>>=

read.table("./data/modules.summary.119760.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 



\subsubsection{Lymphoma cases classified by Cell-of-origin subtypes}
\label{subsec:relapsespearman}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<coo_prediction_networks_summary_spearman_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119758.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))

@ 


Showing the number of modules per network and the number of genes per module. 
<<coo_prediction_modules_summary_spearman_stringent>>=

read.table("./data/modules.summary.119758.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 



\subsection{Network analysis for Pearson-related correlations}
\label{subsec:pearson}
Thresholds based on the Empirical Bayes approach to rank genes and determine if a gene is significantly expressed. Limma implementation.
\marginnote{\small\color{blue}$\Lsh$Same analysis with more stringent parameters}[0cm]
\begin{itemize}
\item \textbf{Average Expression}: 10
\item \textbf{Adjusted P-value}: equal or less than 0.030
\item \textbf{Log Fold Change}: 1
\item \textbf{B-statisitcs}: 2
\end{itemize}


\subsubsection{Nodal versus extra-nodal lymphoma}
\label{subsec:nodal}

Genetic networks from differentially expressed genes selected by comparing sample cases with nodal and extranodal lymphoma.
<<nodes_networks_summary_pearson_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119755.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 

Showing the number of modules per network and the number of genes per module. 
<<nodes_modules_summary_pearson_stringent>>=

read.table("./data/modules.summary.119755.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 

\subsubsection{Relapsed versus no CNS relapsed cases}
\label{subsec:relapse}
Genetic networks from differentially expressed genes selected by comparing sample cases with systemic or no CNS relapse lymphoma.
<<relapse_networks_summary_pearson_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119754.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 


Showing the number of modules per network and the number of genes per module. 
<<relapse_modules_summary_pearson_stringent>>=

read.table("./data/modules.summary.119754.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 

\subsubsection{Lymphoma cases classified by Cell-of-origin subtypes}
\label{subsec:coo}
Genetic networks from differentially expressed genes selected by comparing sample cases with cell of origin classification based on ABC or GCB subtypes.
<<coo_prediction_networks_summary_pearson_stringent,out.width='5in'>>=

read.table("./data/networks.summary.119757.txt", header = TRUE) %>% 
    ggplot(aes(
        x = MaxEdgesPerGene,
        y = NbNodes,
        fill = Standardization)) +
    theme_bw() +
    geom_step(aes(color = Standardization),
              stat = "identity") +
    facet_wrap( ~ CorrelationPower,
               ncol = 2,
               scales = "free") + 
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of potential connections per gene",
         y = "Number of genes per Network") +
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank"))


@ 



Showing the number of modules per network and the number of genes per module. 
<<coo_prediction_modules_summary_pearson_stringent>>=

read.table("./data/modules.summary.119757.txt", header = TRUE) %>%
    ggplot(aes(
        x = NbModules,
        y = MaxGenesPerModule,
        fill = Standardization)) +
    theme_bw() +
    geom_point(aes(shape = Standardization)) +
    scale_color_brewer(type = "qual", palette = 6) +
    labs(x = "Number of modules per network",
         y = "Number of genes per module") +
    facet_wrap( ~ Standardization,
               ncol = 2,
               scales = "free") + 
    theme(legend.position = "top",
          strip.background = element_rect(linetype = "blank", 
                                          fill = "white"),
          panel.border = element_rect(linetype = "blank", 
                                      fill = NA),
          panel.grid.major = element_line(linetype = "blank")) +
    geom_smooth(method = 'loess', size = .5, level = 0.5, alpha=1)

@ 













\section{System Information}
\label{sec:sys_info}
\noindent
The version number of R and packages loaded for generating the vignette were:
<<sessionInfo>>=
###save(list=ls(pattern=".*|.*"),file="PD.Rdata")
sessionInfo()
@ 



\end{linenumbers}
\end{document}
