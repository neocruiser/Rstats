\documentclass[9pt,english]{extarticle}
\include{canevas_config}


\begin{document}
\author{Sleiman Bassim, PhD}
\title{R implementation}
\maketitle
\begin{linenumbers}
<<setup, include=FALSE, cache=FALSE>>=
# set global chunk options
opts_chunk$set(dev="postscript",
               fig.path="graphics/plot",
               fig.lp= "",
               comment=NA,
               fig.keep="high",
               fig.show='hold',
               fig.align='center', 
               out.width='.49\\textwidth',
               tidy.source=TRUE,
               crop=TRUE,
               results="markup",
               warnings=FALSE,
               error=FALSE,
               message=FALSE)
options(formatR.arrow=TRUE,
        width=70,
        digits = 3,
        scipen = 6)
@ 

\noindent
Loaded functions:
<<loading,results='hide'>>=
#source("/media/Data/Dropbox/humanR/01funcs.R")
rm(list=ls())
#setwd("/media/Data/Dropbox/humanR/PD/")
#setwd("~/Dropbox/humanR/PD/")
###load("PD.Rdata", .GlobalEnv)
#lsos(pat="")
@ 

Load packages.
<<packages,results='hide'>>=
pkgs <- c('xlsx','caret','leaps','glmnet','lattice',
          'latticeExtra', 'dplyr', 'tidyr', 'grid',
          'gplots', 'WGCNA')
lapply(pkgs, require, character.only = TRUE)
@

\section{Summary of the workflow}
\label{sec:pipeline}
For pathway construction we will be using a full featured pipeline that implements i- gene network inference from RNA-seq gene expression data, ii- gene discovery after protein domain alignments to ten well cited protein databases, iii- gene interaction validation from inferred networks published in the European private String database, and finally iv- regularization analysis to eliminate to least probabilistic networks identified, however are less likely to be accurately constructed. Briefly, R script is used to calculate a weighted matrix for every gene discovered from the RNA-seq data of ganglia samples. This correlated matrix will be used to select genes with similar patterns of expression that will constitute an ensemble of gene modules. Each module includes eigengenes, which through the guilt-by-association method are identified to be signatures of a cell response at a precise moment after detection of a stimuli. These group of genes will go through a second set of analysis to calculate a probability of interaction at different error thresholds. Next step is to identify the actual genes for their protein functions, hence create an image of the interactions between biological processes specific to these functions. Moreover, validation of the gene networks will depend on the nature of these processes. There is many online sequence databases that deliver this information after acquiring gene names and protein functions. However, we will be using an approach that contains both statistical inference of gene interactions and functional association between processes. Therefore, after constructing gene-gene interaction networks we will compare them to already established networks inferred from all published data over many clades and between several closely related species. Finally, we will use machine learning methods, mainly regularization methods which are known to reduce the hyperspace of the data (that is reduce the number of candidates, eg., genes, networks) and let us focus on the most probabilistically accurate results by keeping the least biased gene networks. Overall the pipeline has already been tested on different datasets, databases are already been acquired and deployed on our servers, and the R code and many of the packages to be used have been tested and some published.

\section{Differentially expressed genes}
\label{sec:deg}
Differentially expressed genes are counted from mapping \textbf{both gills and ganglia} sequenced samples to reference transcriptome built from all samples.
<<degs,out.width='1\\linewidth'>>=
read.table("./data/summary.raw.all.txt") %>%
    ggplot(aes(
        x = V1,
        y = V8,
        fill = V6)) +
    theme_bw() +
    geom_bar(stat = "identity",
             position = "dodge") + 
    facet_wrap(~ V4 + V5 + V7,
               ncol = 4,
               scales = "free") + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "P-value") +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes") +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5, size = 6),
          axis.text.y = element_text(vjust = .5, size = 6),
          strip.text = element_text(size = 4),
          axis.ticks = element_line(size = .2),
          axis.ticks.length = unit(.05, "cm"))

@ 

Differentially expressed genes are counted from mapping \textbf{ganglia} sequenced samples to reference transcriptome built from all samples.
<<degs2,out.width='.5\\linewidth'>>=
read.table("./data/summary.gg.txt") %>%
    ggplot(aes(
    x = V2,
    y = V8,
    fill = V5)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V2,
                  y = V8,
                  ymax = V8,
                  label = V8,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V3 + V4 + V6,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")

@ 

Differentially expressed genes are counted from mapping \textbf{gills} sequenced samples to reference transcriptome built from all samples.
<<degs3,out.width='.5\\linewidth'>>=
read.table("./data/summary.br.txt") %>%
    ggplot(aes(
    x = V2,
    y = V8,
    fill = V5)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V2,
                  y = V8,
                  ymax = V8,
                  label = V8,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V3 + V4 + V6,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")
@ 

\subsection{Increasing DEG by changing the trimming rates of raw reads}
\label{subsec:trim}
Getting gene expression by mapping the original raw reads \textbf{without trimming} to the \textbf{gills} de novo transcriptome. 
\marginnote{\small\color{blue}$\Lsh$ De novo assembly was carried out with trimmed reads though}[0cm]
<<trimmed1,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br_35078.txt") %>%
    ggplot(aes(
    x = V2,
    y = V8,
    fill = V5)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V2,
                  y = V8,
                  ymax = V8,
                  label = V8,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V3 + V4 + V6,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")

@ 

\subsection{Increasing DEGs by changing the normalization strategy: Fast abundance quantification \textit{kallisto}}
\label{subsec:normalization}
The below graph shows the number of differentially expressed genes when raw reads were normalized \textbf{separately} for each biological sample.
\marginnote{\small\color{blue}$\Lsh$ All the analyses before were done on normalized reads by grouping all biological samples together}[0cm]
<<normalized,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br.nonorm.txt") %>%
    ggplot(aes(
    x = V1,
    y = V10,
    fill = V7)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V1,
                  y = V10,
                  ymax = V10,
                  label = V10,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V4 + V5 + V6 + V8,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = 'Paired') +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")
@ 

The below graph shows the number of differentially expressed genes when raw reads were \textbf{NOT} normalized.
<<normalized2,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br.norm.txt") %>%
    ggplot(aes(
    x = V1,
    y = V10,
    fill = V7)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V1,
                  y = V10,
                  ymax = V10,
                  label = V10,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V4 + V5 + V6 + V8,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette ="Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")
@ 

\subsection{Increasing DEGs by changing the normalization strategy: abundance quantification with alignment  \textit{express}}
The R package \textit{eXpress} is solely used to quantify the abundance of differentially expressed genes from \textbf{NOT normalized} reads and aligned with \textbf{Bowtie 1}.
<<normalized3,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br.nonorm.44062.txt") %>%
    ggplot(aes(
    x = V1,
    y = V10,
    fill = V7)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V1,
                  y = V10,
                  ymax = V10,
                  label = V10,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V4 + V5 + V6 + V8,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")

@ 

The R package \textit{eXpress} is solely used to quantify the abundance of differentially expressed genes from \textbf{normalized} reads and aligned with \textbf{Bowtie 1}.
<<normalized4,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br.norm.44060.txt") %>%
    ggplot(aes(
    x = V1,
    y = V10,
    fill = V7)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V1,
                  y = V10,
                  ymax = V10,
                  label = V10,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V4 + V5 + V6 + V8,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")
@ 

The R package \textit{eXpress} is solely used to quantify the abundance of differentially expressed genes from \textbf{normalized} reads and aligned with \textbf{Bowtie 2}.
<<normalized5,out.width='.5\\linewidth',out.height='.45\\linewidth'>>=
read.table("./data/summary.br.norm.44061.txt") %>%
    ggplot(aes(
    x = V1,
    y = V10,
    fill = V7)) + 
    geom_bar(stat = "identity",
             position = "dodge") +
    geom_text(aes(x = V1,
                  y = V10,
                  ymax = V10,
                  label = V10,
                  size = 1,
                  hjust = 0),
              position = position_dodge(width = 1)) +
    facet_wrap(~ V4 + V5 + V6 + V8,
               ncol = 2,
               scales = "free") +
    scale_fill_brewer(type = "qual", palette = "Paired") +
    theme_bw() +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5,
                                     size = 6)) +
    labs(x = "R packages for gene expression differential analysis",
         y = "Number of differentially expressed genes")
@ 


\section{Identifying foreign transcripts in oyster cells}
\label{sec:parasite}
Microscopy protocols identified the presence of a form of parasitic worm in healthy oyster tissues. As a result we might have a parasitic contamination of our RNA-seq reads. Fortunately, this can give a chance to extract the foreign RNA reads, which are already sequenced, assemble them so we identify later on the parasitic species.

\smallskip
We gathered 5 genomes of parasitic worms \href{http://trematode.net/TN_frontpage.cgi?navbar_selection=home&subnav_selection=home_splash_page}{first link}, \href{http://www.sanger.ac.uk/resources/downloads/helminths/}{second link}.
We used 2 separate strategies to assemble contigs specific for each genome, i- using genome-guided assembly by mapping reads to genome or ii- mapping contigs directly to genome.

\subsection{Genome-guided assembly}
\label{subsec:gg}
We used bwa to map reads to each genome separately, then use only the proper mapped mates to assemble a special transcriptome using trinity. Those selected reads were then aligned to each of the five new transcriptomes separately. Abundance of reads and differentially expressed transcripts were finally identified.

\smallskip
\begin{enumerate}
\item \textit{Clonorchis sinensis}
\item \textit{Opisthorchis viverrini}
\item \textit{Schistosoma haematobium}
\item \textit{Schistosoma japonicum}
\item \textit{Schistosoma mansoni}
\end{enumerate}

\smallskip
All previous worm genomes, fasta files, and some annotations can be found at \href{http://trematode.net/TN_frontpage.cgi?navbar_selection=home&subnav_selection=home_splash_page}{NCBI}.
<<parasites,out.width='1\\linewidth'>>=
p1 <- read.table("./data/summary.eXpress.134221.txt")
p3 <- read.table("./data/summary.eXpress.134239.txt")
p4 <- read.table("./data/summary.eXpress.134248.txt")
p5 <- read.table("./data/summary.eXpress.135450.txt")
p1$V9 <- c("I")
p3$V9 <- c("III")
p4$V9 <- c("IV")
p5$V9 <- c("V")
rbind(p1,p3,p4,p5) %>%
    ggplot(aes(x = V9,
               y = V7,
               fill = V4)) +
    theme_bw() + 
    geom_bar(stat = "identity",
             position = "dodge") +
    facet_wrap(~ V1 + V3 + V5,
               ncol = 6,
               scales = "free") +
    labs(x = "Transcripts assembled from oyster/parasite reads using worm genomes as reference",
         y = "Number of differentially expressed contigs") +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5, size = 6),
          axis.text.y = element_text(vjust = .5, size = 6),
          strip.text = element_text(size = 4),
          axis.ticks = element_line(size = .2),
          axis.ticks.length = unit(.05, "cm")) + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "P-value")


@ 


\subsection{Aligning contigs to worm genomes}
\label{subsec:contigss}
Contigs were generated by assembling raw sequencing reads from all tissues and dietary conditions. These transcripts were then aligned to each worm genome separately. We chose the alignments that match at least 500 sequence length.
<<parasites2,out.width='1\\linewidth'>>=
p1 <- read.table("./data/summary.eXpress.134745.txt")
p3 <- read.table("./data/summary.eXpress.134744.txt")
p4 <- read.table("./data/summary.eXpress.135311.txt")
p5 <- read.table("./data/summary.eXpress.135424.txt")
p1$V9 <- c("I")
p3$V9 <- c("III")
p4$V9 <- c("IV")
p5$V9 <- c("V")
rbind(p1,p3,p4,p5) %>%
    ggplot(aes(x = V9,
               y = V7,
               fill = V4)) +
    theme_bw() + 
    geom_bar(stat = "identity",
             position = "dodge") +
    facet_wrap(~ V1 + V3 + V5,
               ncol = 6,
               scales = "free") +
    labs(x = "Oyster transcripts that match to a sequence in worm genomes",
         y = "Number of differentially expressed contigs") +
    theme(legend.position = "top",
          axis.text.x = element_text(vjust = .5, size = 6),
          axis.text.y = element_text(vjust = .5, size = 6),
          strip.text = element_text(size = 4),
          axis.ticks = element_line(size = .2),
          axis.ticks.length = unit(.05, "cm")) + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "P-value")


@ 

\subsection{Annotating genes found from mapping parasitic genomes to oyster reads}
\label{subsec:annotation1}
We used protein databases from ten different sources: \textbf{ProDom, PANTHER, TIGRFAM, SUPERFAMILY, PIRSF, Gene3D, Pfam, SMART, PROSITEPROFILES, PROSITEPATTERNS, COILS}. Hidden Markov models (HMM) were used to find annotations belonging to differentially expressed genes in section \ref{subsec:gg} and \ref{subsec:contigss}. We chose tissue specific differentially expressed genes at a p-value of 10e-3 and a c-fold of 2. DESeq2 R packages generated these gene selections between ganglia and gill tissues.
<<ips>>=
read.table("./data/parasite-ips.txt",header = T) %>%
    gather("database", "counts", 2:10) %>% 
    ggplot(aes(x = parasite,
               y = counts,
               fill = assembly)) +
    theme_bw() +
    geom_bar(stat = "identity",
             position = "dodge") +
    facet_wrap(~ database,
               ncol = 3,
               scales = "free") +
    labs(x = "Differentially expressed parasitic contigs extracted from oyster transcriptomes",
         y = "Number of annotated contigs") +
    theme(legend.position = "top") + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "Assembly protocols")

@ 

The Panther database has an extended collection of species, functional domains, and GO-terms compared to other databases. Here is a short summary of what was found in Panther at e-value of 10e-10 and minimum amino acid alignment length of 20.
<<panther1,out.height='.35\\linewidth'>>=
read.table("./data/parasite-panther.txt", header = T) %>%
    gather("category", "count",2:4) %>%
    ggplot(aes(x = parasite,
               y = count,
               fill = assembly)) + 
    theme_bw() +
    geom_bar(stat = "identity",
             position = "dodge") +
    facet_wrap(~ category,
               ncol = 3,
               scales = "free") +
    labs(x = "Parasites",
         y = "Counts") +
    theme(legend.position = "top") + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "Assembly protocols")

@ 


\subsection{How many reads map by pair mates to each parasite genome?}
\label{subsec:mates}
Only pair reads where both mates map in a forward and reverse fashion are displayed.
<<mates,out.width='0.95\\linewidth',out.height='.8\\linewidth'>>=
df <- read.table("./data/parasite.mates.mapping.txt", header = T)
dfx <- sapply(df[,c(2:6)], function(x) {(x/df$Total)*100})
dfx <- data.frame(dfx, df$Tissue, df$Sample)
#require(scales)
#dfy[order(dfy$counts , decreasing=FALSE),] %>% head
gather(dfx, "parasite", "counts", 1:5) %>%
#arrange(desc(counts)) %>% 
    ggplot(aes(x = df.Sample,
               y = counts,
               fill = df.Tissue)) + 
    theme_bw() + 
    geom_bar(stat = "identity",
             position = "dodge") +
    facet_wrap(~ parasite,
               ncol = 1,
               scales = "free") +
    labs(x = "Oysters sequenced",
         y = "Percentage of reads that align to each parasitic reference genome (%)") +
    theme(legend.position = "top",
          axis.text.x = element_text(angle = 90,
                                     vjust = .5, size = 7)) + 
    scale_fill_brewer(type = "qual", palette = "Paired",
                      name = "Sequenced oyster tissue")
#    scale_y_continuous(labels = scales::percent)

@ 


\section{Network inference}
\label{sec:networks}
We will be using weighted genes co-expression analyses from Zhang and Horrath 2005. Machine learning regularization techniques will be applied after to emphasize selection of significant gene modules.

\subsection{Correlation annalysis}
\label{subsec:correlation}
The analysis sill include: Sample verification and clustering. Similarity matrix between samples. Convertion of similarity matrix to adjacency matrix. Detection of co-expression modules.
<<clustering>>=
counts <- read.table("./data/diffExpr.P1e-4_C2.matrix.log2.dat", header = T)
heatmap.2(cor(counts), trace = 'none')
@ 

\subsection{Network reconstruction}
\label{subsec:network2}
Plot number of nodes and edges after network construction at different power transformations of gene expression FPKMs, using different thresholds for significant cluster sizes.
\smallskip
Power transformation reduces low/false correlations between genes \href{http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.471.9599&rep=rep1&type=pdf}{Zhang and Horvath (2005 PDF)}.
<<networks>>=
read.table("./data/network.stats.txt", header = TRUE) %>%
    ggplot(aes(x = power_trans,
               y = node)) +
    theme_bw() +
    geom_point(aes(color = factor(threshold),
                   size = 10)) + 
    labs(x = "Power transformation of gene expression matrix during clustering",
         y = "Number of nodes (genes) per network that have a minimum of 1 edge") +
    theme(legend.position = "top") +
    scale_color_brewer(type = "qual", palette = "Paired",
                      name = "Threshold for clustering genes")
@ 










\section{System Information}
\label{sec:sys_info}
\noindent
The version number of R and packages loaded for generating the vignette were:
<<sessionInfo>>=
###save(list=ls(pattern=".*|.*"),file="PD.Rdata")
sessionInfo()
@ 



\end{linenumbers}
\end{document}
